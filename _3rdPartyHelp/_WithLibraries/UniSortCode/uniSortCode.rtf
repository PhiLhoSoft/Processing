{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf290
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ql\qnatural\pardirnatural

\f0\fs24 \cf0 //SOURCE: http://www.hefce.ac.uk/finance/recurrent/2010/?o=2.\
import processing.pdf.*;\
import de.bezier.data.*;\
XlsReader reader;\
PFont font;\
\
ArrayList uniArrayList;\
\
int arrayslength = 133;\
\
String[] universities = new String[arrayslength];\
int[] totalFunding = new int[arrayslength];\
int[] wideningParticipation = new int[arrayslength];//getting people from non-standard backgrounds into uni.\
int[] totalResearch = new int[arrayslength];\
int[] recurrentGrant = new int[arrayslength];\
String[] percentageChangeString = new String[arrayslength];\
float[] percentageChange = new float[arrayslength];\
int[] numsArray = new int[arrayslength];\
String[] percentageChangeFloatToInt = new String[arrayslength]; \
\
UniversityObject uni;//all of my objects are the same type - all instances of 'uni'.\
\
int numCounter = 1;\
float listLength = arrayslength-1;\
  float heightValue = height;\
  float spacePerUni;\
\
\
\
\
\
class CompareNames implements Comparator\
\{\
  public int compare(Object o1, Object o2)\
  \{\
    return ((UniversityObject) o1).uniName.compareTo(((UniversityObject) o2).uniName);\
  \}\
\}\
\
\
\
\
                              class CompareFloats implements Comparator\
                              \{\
                                public int compare(Object o1, Object o2)\
                                \{\
                                  return int(((UniversityObject) o1).perChangeFloat - ((UniversityObject) o2).perChangeFloat);\
                                \}\
                              \}\
\
\
\
\
\
\
\
void setup()\{\
  size(400, 700, PDF, "file.pdf");\
  background(255);\
  spacePerUni = ((height-200)/listLength)/2;//finds how much vertical space for each uni.\
  font = createFont("Arial", 4);\
  textFont(font);\
  uniArrayList = new ArrayList();//create an empty list.\
  reader = new XlsReader( this, "UniversityFunding10.xls" ); \
  reader.getFirstRowNum();//finds first cell with content.\
  \
  \
\
  for(int i=1; i<universities.length; i++)\{\
    universities[i] = reader.getString(i, 0);\
    totalFunding[i] = reader.getInt(i, 1);\
    wideningParticipation[i] = reader.getInt(i, 2);\
    totalResearch[i] = reader.getInt(i, 3);\
    recurrentGrant[i] = reader.getInt(i, 6);\
    percentageChange[i] = reader.getFloat(i, 7);// here 'i' number is row-1.\
    numsArray[i] = i;\
    \
    float percentageChangeFloatValue = percentageChange[i]; \
    float percentageChangeFloatValueTimesTen = percentageChangeFloatValue*10;\
    int newValue = int(percentageChangeFloatValueTimesTen);\
\
\
  \}\
  \
\
  \
  for(int i=1; i<arrayslength; i++)\{\
         if(percentageChange[numCounter]>0)\{\
          uni = new UniversityObject(numCounter, universities[numCounter], totalFunding[numCounter], wideningParticipation[numCounter], totalResearch[numCounter], recurrentGrant[numCounter], percentageChange[numCounter], color(0, 0, 255), 0);//initialise my uni object - has 8 parameters!\
          uniArrayList.add(new UniversityObject(numCounter, universities[numCounter], totalFunding[numCounter], wideningParticipation[numCounter], totalResearch[numCounter], recurrentGrant[numCounter], percentageChange[numCounter], color(0, 0, 255), 0));\
         \}else\{\
          uni = new UniversityObject(numCounter, universities[numCounter], totalFunding[numCounter], wideningParticipation[numCounter], totalResearch[numCounter], recurrentGrant[numCounter], percentageChange[numCounter], color(255, 0, 0, 100), 0);//initialise my uni object - has 8 parameters!\
          uniArrayList.add(new UniversityObject(numCounter, universities[numCounter], totalFunding[numCounter], wideningParticipation[numCounter], totalResearch[numCounter], recurrentGrant[numCounter], percentageChange[numCounter], color(255, 0, 0, 100), 0));\
         \}\
    \
    numCounter++;\
  \}\
\
\
  println(uniArrayList.size()+" arraylist '10 size");\
\}//end of setup.\
\
\
void draw()\{\
  noLoop();\
\
Collections.sort(uniArrayList, new CompareFloats());\
\
\
\
for(int i=0; i<uniArrayList.size()-1; i++)\{//have made shorter - i think this chops a uni off from '10 & '08 list...!?-------------- FIX THIS. - is it the met? 0's?\
  UniversityObject uo = (UniversityObject) uniArrayList.get(i);\
  if(uo.uniName.equals("Total") == false)\{\
  uo.display(i);\
  \}\
\}\
  \
\
  println("Done");\
 exit();\
\}//end of draw.\
\
\
\
\
class UniversityObject \{//define my class.\
  \
    int num;//no. of uni in list..\
    String uniName;//class variables.\
    int totalFundingInt;\
    int wideningParInt;\
    int totalResearchInt;\
    int recGrantInt;\
    float perChangeFloat;\
    color c;\
    int yearsBack;\
\
  \
    UniversityObject(int tempNum, String tempUniName, int tempTotalFundingInt, int tempWideningParInt, int tempTotalResearchInt, int tempRecGrantInt, Float tempPerChangeFloat, color tempC, int tempYearsBack) \{// constructor.\
    num = tempNum;\
    uniName = tempUniName;\
    totalFundingInt = tempTotalFundingInt;\
    wideningParInt = tempWideningParInt;\
    totalResearchInt = tempTotalResearchInt;\
    recGrantInt = tempRecGrantInt;\
    perChangeFloat = tempPerChangeFloat;\
    c = tempC;\
    yearsBack = tempYearsBack;\
\
  \}\
  \
  void display(int i) \{//function of the ojects created by the class. \
    num = i;\
    fill(c);\
    noStroke();\
    float totalFundsMappedto200;\
    totalFundsMappedto200 = map(totalFundingInt, 0, 200000, 0, 200);\
    rect((width/2), 20+(num*5)-spacePerUni/2, perChangeFloat*10, spacePerUni*2);\
    textAlign(LEFT);\
    textSize(4);\
    if(perChangeFloat>0)\{\
      \
      text(uniName+" %", (width/2)+(perChangeFloat*10)+5, 22+(num*5));\
    \}else\{\
      fill(255, 0, 0);\
      text(uniName+"  %", (width/2)+5, 22+(num*5));\
    \}\
  \}\
\}\
}